<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 系统 | Pangff's Blog]]></title>
  <link href="http://www.pffair.com/blog/categories/xi-tong/atom.xml" rel="self"/>
  <link href="http://www.pffair.com/"/>
  <updated>2021-05-11T15:40:50+08:00</updated>
  <id>http://www.pffair.com/</id>
  <author>
    <name><![CDATA[pangff]]></name>
    <email><![CDATA[540688649@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac操作Raspberry安装ubuntu sever 20.04]]></title>
    <link href="http://www.pffair.com/blog/2021/05/04/maccao-zuo-raspberryan-zhuang-ubuntu-sever-20-dot-04/"/>
    <updated>2021-05-04T21:02:45+08:00</updated>
    <id>http://www.pffair.com/blog/2021/05/04/maccao-zuo-raspberryan-zhuang-ubuntu-sever-20-dot-04</id>
    <content type="html"><![CDATA[<p>入手两个树莓派4B便于本地做一些测试，记录下通过Mac给树莓派刷centos 7.9系统的过程</p>

<!--more-->


<h3>首先格式化TF卡</h3>

<p>TF放入读卡器，读卡器插到Mac上，终端执行</p>

<pre><code>diskutil list
</code></pre>

<p>确认下哪一个是要烧录系统的内存卡（我的是<strong>/dev/disk2</strong>）</p>

<p>执行如下命令格式化内存卡<strong>/dev/disk2</strong></p>

<pre><code>sudo diskutil eraseDisk FAT32 TFCARD MBRFormat /dev/disk2
</code></pre>

<p>执行</p>

<pre><code>df -h
</code></pre>

<p>确认下格式化情况</p>

<p>解除挂载</p>

<pre><code>sudo diskutil unmount /dev/disk2s1
</code></pre>

<h3>烧录系统</h3>

<p>下载ubuntu 20.04.2,<a href="https://cdimage.ubuntu.com/releases/20.04/release/ubuntu-20.04.2-preinstalled-server-armhf+raspi.img.xz">官方镜像</a></p>

<p>烧录镜像</p>

<pre><code>sudo dd bs=1m if=镜像下载目录 of=/dev/rdisk2 conv=sync
</code></pre>

<h3>启动树莓派</h3>

<ul>
<li>TF卡从读卡器取出，放到树莓派卡槽，树莓派连接连接电源启动</li>
<li>树莓派通过网线连接到路由器，从路由器查看连接设备找到树莓派的ip</li>
</ul>


<p>ssh 登录树莓派，系统默认账号(ubuntu/ubuntu)</p>

<pre><code>ssh ubuntu@树莓派ip 
</code></pre>

<p>登录后要修改密码</p>

<h3>调整磁盘</h3>

<p>登录系统后</p>

<pre><code>df -h
</code></pre>

<p>发现系统磁盘大小不对，执行如下脚本</p>

<pre><code>#!/bin/bash

clear

part=$(mount |grep '^/dev.* / ' |awk '{print $1}')

if [ -z "$part" ];then

    echo "Error detecting rootfs"

    exit -1

fi

dev=$(echo $part|sed 's/[0-9]*$//g')

devlen=${#dev}

num=${part:$devlen}

if [[ "$dev" =~ ^/dev/mmcblk[0-9]*p$ ]];then

    dev=${dev:0:-1}

fi

if [ ! -x /usr/bin/growpart ];then

    echo "Please install cloud-utils-growpart (sudo yum install cloud-utils-growpart)"

    exit -2

fi

if [ ! -x /usr/sbin/resize2fs ];then

    echo "Please install e2fsprogs (sudo yum install e2fsprogs)"

    exit -3

fi

echo $part $dev $num



echo "Extending partition $num to max size ...."

growpart $dev $num

echo "Resizing ext4 filesystem ..."

resize2fs $part

echo "Done."

df -h |grep $part
</code></pre>

<p>执行后，磁盘恢复正常</p>

<h3>配置WIFI</h3>

<p>编辑配置文件</p>

<pre><code>sudo vi /etc/netplan/50-cloud-init.yaml
</code></pre>

<pre><code># This file is generated from information provided by the datasource.  Changes
# to it will not persist across an instance reboot.  To disable cloud-init's
# network configuration capabilities, write a file
# /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:
# network: {config: disabled}
network:
    ethernets:
        eth0:
            dhcp4: true
            optional: true
    version: 2
    wifis:
        wlan0:
            dhcp4: true
            optional: true
            access-points:
                "你的无线SSID":
                    password: "你的无线密码"
                "你的无线SSID"2:
                    password: "你的无线密码"
</code></pre>

<pre><code>sudo netplan generate
</code></pre>

<pre><code>sudo netplan apply
</code></pre>

<p>查看连接情况(wlan0 自动获取到ip即可)</p>

<pre><code>ip a
</code></pre>

<h3>配置sshkey，免密登录</h3>

<pre><code>ssh-copy-id -i .ssh/id_rsa.pub ubuntu@树莓pi到IP
</code></pre>

<h3>修改下主机名</h3>

<pre><code>hostname pi
</code></pre>

<h3>安装docker注意</h3>

<p>按照官方按照方式</p>

<p>armhf 架构,发现 <a href="https://download.docker.com/linux/ubuntu/dists/focal">https://download.docker.com/linux/ubuntu/dists/focal</a> 下没有对应的armhf的容器版本可以安装</p>

<pre><code>echo \
  "deb [arch=armhf signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null
</code></pre>

<p>运行 lsb_release -cs</p>

<pre><code>ubuntu@pi:~$ lsb_release -cs 

focal
</code></pre>

<p>lsb_release得知版本号位focal，根据软件向下兼容的原则，focal版本高于bonic,所以存储库路径可以使用bonic版本代替focal版本，此处用bonic代替(lsb_release -cs) 即可</p>

<pre><code>echo   "deb [arch=armhf signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu bionic stable" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null
</code></pre>

<h3>将当前用户加入docker组，免sudo</h3>

<pre><code>sudo usermod -aG docker ubuntu
</code></pre>

<h3>安装docker-compose</h3>

<pre><code>sudo apt-get update
</code></pre>

<p>安装python pip
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install -y libffi-dev libssl-dev&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;sudo apt-get install -y python3 python3-pip&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>安装docker-compose
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;sudo pip3  install docker-compose=1.29.1&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose</span></code></pre></td></tr></table></div></figure></p>

<p>查看版本
<code>
docker-compose version
</code></p>
]]></content>
  </entry>
  
</feed>
